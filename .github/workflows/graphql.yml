name: Fetch GitHub Contributions

on:
  workflow_dispatch: 
  schedule:
    - cron: '0 0 * * *'

jobs:
  fetch_contributions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main  

      - name: GraphQL request to fetch contributions
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          query='{
            viewer {
              repositories(first: 100) {
                edges {
                  node {
                    name
                    defaultBranchRef {
                      target {
                        ... on Commit {
                          history(first: 1) {
                            edges {
                              node {
                                messageHeadline
                                committedDate
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }'

          echo "Query: $query"

          response=$(curl -X POST \
            -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: text/yaml" \
            -d '{
              "query": "'"$(echo "$query" | jq -sR .)"'"
            }' \
            https://api.github.com/graphql)

          echo "Response: $response" 

          if [[ $(echo "$response" | jq -r '.errors') != "null" ]]; then
            echo "GraphQL errors: $(echo "$response" | jq -r '.errors')"
            exit 1  
          fi

          latest_commit_repository=""
          latest_commit_message=""
          latest_commit_date=""

          for repo in $(echo "$response" | jq -c '.data.viewer.repositories.edges[]'); do
            repo_name=$(echo "$repo" | jq -r '.node.name')
            commit_date=$(echo "$repo" | jq -r '.node.defaultBranchRef.target.history.edges[0].node.committedDate // empty')
            commit_message=$(echo "$repo" | jq -r '.node.defaultBranchRef.target.history.edges[0].node.messageHeadline // empty')

            if [[ -n "$commit_date" ]]; then
              if [[ -z "$latest_commit_date" || "$commit_date" > "$latest_commit_date" ]]; then
                latest_commit_date="$commit_date"
                latest_commit_message="$commit_message"
                latest_commit_repository="$repo_name"
              fi
            fi
          done

          echo "{\"latest_commit\": {\"repository\": \"$latest_commit_repository\", \"message\": \"$latest_commit_message\", \"date\": \"$latest_commit_date\"}}" > src/assets/json/contributions.json

      - name: Configure Git user
        run: |
          git config --global user.name 'sarahthebest'
          git config --global user.email 'sarah.emmoth@proton.me'

      - name: Commit and Push to GitHub Pages branch
        run: |
          git add src/assets/json/contributions.json
          git commit -m "Update contributions data" || echo "No changes to commit"
          git push origin main
